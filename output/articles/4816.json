{"title":"Emptiness problem","summary":"In theoretical computer science and formal language theory, a formal language is empty if its set of valid sentences is the empty set. The emptiness problem is the question of determining whether a language is empty given some representation of it, such as a finite-state automaton.[1] For an automaton having n {\\displaystyle n} states, this is a decision problem that can be solved in O ( n 2 ) {\\displaystyle O(n^{2})} time.[2] However, variants of that question, such as the emptiness problem for non-erasing stack automata, are PSPACE-complete.[3]","image":"a601995d55609f2d9f5e233e36fbe9ea26011b3b.svg","url":"Emptiness_problem"}