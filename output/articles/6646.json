{"title":"Grzegorczyk hierarchy","summary":"The Grzegorczyk hierarchy (/ɡrɛˈɡɔːrtʃək/, Polish pronunciation: [ɡʐɛˈɡɔrt͡ʂɨk]), named after the Polish logician Andrzej Grzegorczyk, is a hierarchy of functions used in computability theory.[1] Every function in the Grzegorczyk hierarchy is a primitive recursive function, and every primitive recursive function appears in the hierarchy at some level. The hierarchy deals with the rate at which the values of the functions grow; intuitively, functions in lower levels of the hierarchy grow slower than functions in the higher levels.","image":"aac83204399bbdbc0d739083eab9ac19f570e47f.svg","url":"Grzegorczyk_hierarchy"}