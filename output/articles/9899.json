{"title":"Many-one reduction","summary":"In computability theory and  computational complexity theory, a many-one reduction (also called mapping reduction[1]) is a reduction which converts instances of one decision problem to another decision problems using an effective function. Where the instance reduced to is in the language L 2 {\\displaystyle L_{2}} if the initial instance was in its language L 1 {\\displaystyle L_{1}} and is not in the language L 2 {\\displaystyle L_{2}} if the initial instance was not in its language L 1 {\\displaystyle L_{1}} . Thus if we can decide whether L 2 {\\displaystyle L_{2}} instances are in the language L 2 {\\displaystyle L_{2}} , we can decide whether L 1 {\\displaystyle L_{1}} instances are in its language by applying the reduction and solving L 2 {\\displaystyle L_{2}} . Thus, reductions can be used to measure the relative computational difficulty of two problems. It is said that L 1 {\\displaystyle L_{1}} reduces to L 2 {\\displaystyle L_{2}} if, in layman's terms L 2 {\\displaystyle L_{2}} is harder to solve than L 1 {\\displaystyle L_{1}} . That is to say, any algorithm that solves L 2 {\\displaystyle L_{2}} can also be used as part of a (otherwise relatively simple) program that solves L 1 {\\displaystyle L_{1}} .","image":"c6a952cfe42c86b7741f55a817da0e251793a358.svg","url":"Many-one_reduction"}