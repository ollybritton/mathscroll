{"title":"Intersection type","summary":"In type theory, an intersection type can be allocated to values that can be assigned both the type σ {\\displaystyle \\sigma } and the type τ {\\displaystyle \\tau } . This value can be given the intersection type σ ∩ τ {\\displaystyle \\sigma \\cap \\tau } in an intersection type system.[1] Generally, if the ranges of values of two types overlap, then a value belonging to the intersection of the two ranges can be assigned the intersection type of these two types. Such a value can be safely passed as argument to functions expecting either of the two types. For example, in Java the class Boolean implements both the Serializable and the Comparable interfaces. Therefore, an object of type Boolean can be safely passed to functions expecting an argument of type Serializable and to functions expecting an argument of type Comparable.","image":"59f59b7c3e6fdb1d0365a494b81fb9a696138c36.svg","url":"Intersection_type"}