{"title":"Hidden shift problem","summary":"The Hidden shift problem states: Given an oracle O {\\displaystyle O} that encodes two functions f {\\displaystyle f} and g {\\displaystyle g} , there is an n-bit string s {\\displaystyle s} for which g ( x ) = f ( x + s ) {\\displaystyle g(x)=f(x+s)} for all x {\\displaystyle x} . Find s {\\displaystyle s} .[1] Many functions, such as the Legendre symbol and Bent functions, satisfy these constraints.[2] With a quantum algorithm that's defined as \" | s ⟩ = H ⊗ n O f H ⊗ n O g ^ H ⊗ n | 0 n ⟩ {\\displaystyle |s\\rangle =H^{\\otimes n}O_{f}H^{\\otimes n}O_{\\hat {g}}H^{\\otimes n}|0^{n}\\rangle } \" where H {\\displaystyle H} is the Hadamard gate and g ^ {\\displaystyle {\\hat {g}}} is the Fourier transform of g {\\displaystyle g} , this problem can be solved in a polynomial number of queries to O {\\displaystyle O} while taking exponential queries with a classical algorithm. The difference between the Hidden subgroup problem and the Hidden shift problem is that the former focuses on the underlying group while the latter focuses on the underlying ring or field.[1]","image":"9d70e1d0d87e2ef1092ea1ffe2923d9933ff18fc.svg","url":"Hidden_shift_problem"}